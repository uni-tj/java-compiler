module SemanticCheck.StdLib (stdLib, withAuthGen) where

import           Types.AST
import qualified Types.Core as Type
import           Types.Core (AccessModifier (..))

stdLib :: [Class]
stdLib = [object, system, printStream]

withAuthGen :: a -> WithPosition a
withAuthGen = WithPosition AutoGenerated

-- omits the default super call since stdlib is not typechecked
defConstructor :: Type.ClassName -> Constructor
defConstructor cn = Constructor
  { crposition=AutoGenerated
  , craccess=withAuthGen Public
  , crname=withAuthGen cn
  , crparams=[]
  , crbody=Block AutoGenerated []
  }

object :: Class
object = Class
  { cposition     = AutoGenerated
  , caccess       = withAuthGen Public
  , cname         = withAuthGen "java/lang/Object"
  , cextends      = Nothing
  , cfields       = []
  , cmethods      = []
  , cconstructors = [ defConstructor "java/lang/Object" ]
  }

printStream :: Class
printStream = Class
  { cposition     = AutoGenerated
  , caccess       = withAuthGen Public
  , cname         = withAuthGen "java/io/PrintStream"
  , cextends      = Just $ withAuthGen "java/lang/Object"
  , cfields       = []
  , cmethods      =
      [ printFunc "print"     Type.Char,
        printFunc "print"     Type.Int,
        printFunc "print"   $ Type.Instance "java/lang/Object",
        printFunc "println"   Type.Bool,
        printFunc "println"   Type.Char,
        printFunc "println"   Type.Int,
        printFunc "println" $ Type.Instance "java/lang/Object"
      ]
  , cconstructors = [ defConstructor "java/io/PrintStream" ]
  }
  where
    printFunc name ptype = Method
      { mposition = AutoGenerated
      , moverride = withAuthGen False
      , maccess   = withAuthGen Public
      , mstatic   = withAuthGen False
      , mtype     = withAuthGen Type.Void
      , mname     = withAuthGen name
      , mparams   = [(withAuthGen ptype, withAuthGen "x")]
      , mbody     = Block AutoGenerated []
      }

system :: Class
system = Class
  { cposition     = AutoGenerated
  , caccess       = withAuthGen Public
  , cname         = withAuthGen "java/lang/System"
  , cextends      = Just $ withAuthGen "java/lang/Object"
  , cfields       =
      [ Field{ fposition = AutoGenerated, faccess = withAuthGen Public, fstatic = withAuthGen True, ftype = withAuthGen $ Type.Instance "java/io/PrintStream", fname = withAuthGen "out", finit = Nothing }
      ]
  , cmethods      = []
  , cconstructors = [ defConstructor "java/lang/System" ]
  }
